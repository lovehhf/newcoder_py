# -*- coding:utf-8 -*-

__author__ = 'huanghf'

"""
近日，埃航空难的新闻牵动了无数人的心。据悉，空难很可能是由于波音737MAX飞机的失速保护系统错误触发所致。
在飞机进行高空飞行时，驾驶辅助系统如果检测到飞机失速，无法维持足够的飞行升力，会压低机头进行俯冲，以重新获得速度，进而获取足够的飞行升力，维持飞行高度。但是在飞机进行低空飞行时，触发俯冲机制极有可能在飞机还未获得足够飞行速度并上升之前已经撞击地面。
鉴于半年内的两起事故，波音公司决定在低于一定高度时屏蔽自动俯冲机制，现提供**K架飞机用于测试最低可俯冲高度**，
设定需要测试的海拔范围为1~H（单位米），请问最不理想情况下，**至少需要多少次才能求出飞机的最低可俯冲高度？**

输入描述:
输入为整数K, H，用空格分隔

K代表用于测试的飞机数量，H代表需要测试的高度范围为1~H米（包含H）

输出描述:
输出整数N，代表最坏情况下需要测试的次数

输入例子1:
1 1000

输出例子1:
1000

例子说明1:
只有一架飞机用来测试的情况下，从最高高度1000米，逐次减1m进行测试，直到飞机坠毁。

输入例子2:
15 1000

输出例子2:
10

例子说明2:
飞机数量足够多，每次均使用二分法进行测试

LeetCode 887. 鸡蛋掉落
"""


def solve(n, k):
    dp = [0] * (k + 1)
    dp[0] = 0
    m = 0
    while dp[k] < n:
        for i in range(k, 0, -1):
            dp[i] = dp[i] + dp[i - 1] + 1
        m += 1
    return m


k, n = list(map(int, input().split()))
print(solve(n, k))
